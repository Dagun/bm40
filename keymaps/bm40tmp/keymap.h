#include QMK_KEYBOARD_H

#define LOWER MO(_LOWER)
#define RAISE MO(_RAISE)
#define MIDDLE MO(_MIDDLE)

enum layers {
  _COLEMAK,
  _QWERTY,
  _LOWER,
  _MIDDLE,
  _RAISE,
  _ADJUST,
  _SNEK
};

enum macros {
    UP,
    LEFT,
    RIGHT,
    DOWN
};

enum unicode_names {
    BANG,
    IRONY,
    SNEK
};

const uint32_t PROGMEM unicode_map[] = {
    [BANG]  = 0x203D,  // ‚ÄΩ
    [IRONY] = 0x2E2E,  // ‚∏Æ
    [SNEK]  = 0x1F40D, // üêç
};

const uint16_t PROGMEM keymaps[][MATRIX_ROWS][MATRIX_COLS] = {

/* _COLEMAK
 * ,-----------------------------------------------------------------------------------.
 * | Tab  |   Q  |   W  |   F  |   P  |   G  |   J  |   L  |   U  |   Y  |   ;  |      |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * | Esc  |   A  |   R  |   S  |   T  |   D  |   H  |   N  |   E  |   I  |   O  |  "   |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * | Shift|   Z  |   X  |   C  |   V  |   B  |   K  |   M  |   ,  |   .  |   /  | Shift|
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * | Ctrl | GUI  | Alt  | LOWER|MIDDLE|    Space    |RAISE |      |      |XSNEK |QWERTY|
 * `-----------------------------------------------------------------------------------'
 */

[_COLEMAK] = LAYOUT_planck_mit(
    KC_TAB,    KC_Q,     KC_W,     KC_F,   KC_P,    KC_G,    KC_J,   KC_L,     KC_U,     KC_Y,     KC_SCOLON,  _______,
    KC_BSPACE, KC_A,     KC_R,     KC_S,   KC_T,    KC_D,    KC_H,   KC_N,     KC_E,     KC_I,     KC_O,       KC_QUOTE,
    KC_LSFT,   KC_Z,     KC_X,     KC_C,   KC_V,    KC_B,    KC_K,   KC_M,     KC_COMM,  KC_DOT,   KC_SLSH,    KC_RSFT,
    KC_LCTL,   KC_LGUI,  KC_LALT,  LOWER,  MIDDLE,     KC_SPC    ,  RAISE,  _______,  _______,  X(SNEK),  TO(_QWERTY)
),

/* _QWERTY
 * ,-----------------------------------------------------------------------------------.
 * | Tab  |   Q  |   W  |   E  |   R  |   T  |   Y  |   U  |   I  |   O  |   P  | Bksp |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * | Esc  |   A  |   S  |   D  |   F  |   G  |   H  |   J  |   K  |   L  |   ;  |  "   |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * | Shift|   Z  |   X  |   C  |   V  |   B  |   N  |   M  |   ,  |   .  |   /  |Enter |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * | BLTog| Ctrl | Alt  | GUI  |Lower |    Space    |Raise |      |      |XIRONY|COLEMA|
 * `-----------------------------------------------------------------------------------'
 */

[_QWERTY] = LAYOUT_planck_mit(
    KC_TAB,  KC_Q,    KC_W,    KC_E,    KC_R,    KC_T,    KC_Y,    KC_U,    KC_I,    KC_O,    KC_P,      KC_BSPC,
    KC_ESC,  KC_A,    KC_S,    KC_D,    KC_F,    KC_G,    KC_H,    KC_J,    KC_K,    KC_L,    KC_SCLN,   KC_QUOT,
    KC_LSFT, KC_Z,    KC_X,    KC_C,    KC_V,    KC_B,    KC_N,    KC_M,    KC_COMM, KC_DOT,  KC_SLSH,   KC_ENT ,
    RGB_TOG, KC_LCTL, KC_LALT, KC_LGUI, LOWER,     KC_SPC     ,    RAISE,   _______, _______, X(IRONY),  TO(_COLEMAK)
),

/* _SNEK
 * ,-----------------------------------------------------------------------------------.
 * |      |      |      |      |      |      |      |      |      |      |      |      |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * |      |      |      |      |      |      |      |      |      |      |      |      |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * |      |      |      |      |      |      |      |      |      |      |      |      |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * |COLEMA|      |      |      |      |             |      | Left | Down |  Up  |Right |
 * `-----------------------------------------------------------------------------------'
 */

[_SNEK]  = LAYOUT_planck_mit(
    KC_NO,        KC_NO,    KC_NO,    KC_NO,    KC_NO,    KC_NO,    KC_NO,    KC_NO,    KC_NO,    KC_NO,    KC_NO,   KC_NO,
    KC_NO,        KC_NO,    KC_NO,    KC_NO,    KC_NO,    KC_NO,    KC_NO,    KC_NO,    KC_NO,    KC_NO,    KC_NO,   KC_NO,
    KC_NO,        KC_NO,    KC_NO,    KC_NO,    KC_NO,    KC_NO,    KC_NO,    KC_NO,    KC_NO,    KC_NO,    KC_NO,   KC_NO ,
    TO(_COLEMAK), KC_NO,    KC_NO,    KC_NO,    KC_NO,        KC_NO      ,    KC_NO,    M(LEFT),  M(DOWN),  M(UP),   M(RIGHT)
),

/* _LOWER
 * ,-----------------------------------------------------------------------------------.
 * |  F1  |  F2  |  F3  |  F4  |  F5  |  F6  |  F7  |  F8  |  F9  | F10  | F11  | F12  |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * | Del  |      |      |      |      |      | LEFT | DOWN |  UP  |RIGHT |ENTER |      |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * |      |      |      |      |      | MB1  | MSL  | MSD  | MSU  | MSR  | MB2  | MB3  |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * |      |      |ENTER |      |      |             |      |      |      |      |      |
 * `-----------------------------------------------------------------------------------'
 */

[_LOWER] = LAYOUT_planck_mit(
    KC_F1,     KC_F2,    KC_F3,     KC_F4,     KC_F5,     KC_F6,      KC_F7,       KC_F8,       KC_F9,     KC_F10,      KC_F11,      KC_F12,
    KC_DELETE, _______,  _______,   _______,   _______,   _______,    KC_LEFT,     KC_DOWN,     KC_UP,     KC_RIGHT,    KC_ENTER,    _______,
    _______,   _______,  _______,   _______,   _______,   KC_MS_BTN1, KC_MS_LEFT,  KC_MS_DOWN,  KC_MS_UP,  KC_MS_RIGHT, KC_MS_BTN2,  KC_MS_BTN3,
    _______,   _______,  KC_ENTER,  _______,   _______,         _______         ,    _______,     _______,     _______,   _______,   _______
),

/* _MIDDLE
 * ,-----------------------------------------------------------------------------------.
 * |      |  √Ñ   |      |      |      |      |      |      |      |   √ú  |   √ñ  |      |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * |      |      |      |   √ü  |      |      |      |  (   |  )   |  [   |  ]   |  \   |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * |      |      |      |      |      |      |      |  -   |  =   |      |      |      |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * |      |      |      |      |      |             |      |      |      |NMINUS|NPLUS |
 * `-----------------------------------------------------------------------------------'
 */

[_MIDDLE] = LAYOUT_planck_mit(
    _______,  RALT(KC_Q),  _______,     _______,    _______,   _______,   _______,   _______,      _______,     RALT(KC_Y),   RALT(KC_P),   _______,
    _______,  _______,     _______,     RALT(KC_S), _______,   _______,   _______,   LSFT(KC_9),   LSFT(KC_0),  KC_LBRACKET,  KC_RBRACKET,  KC_BSLASH,
    _______,  _______,     _______,     _______,    _______,   _______,   _______,   KC_MINUS,     KC_EQUAL,    _______,      _______,      _______,
    _______,  _______,     _______,     _______,    _______,        _______      ,   _______,      _______,     _______,      KC_KP_MINUS,  KC_KP_PLUS
),

/* _RAISE
 * ,-----------------------------------------------------------------------------------.
 * |      |   1  |   2  |   3  |   4  |   5  |   6  |   7  |   8  |   9  |   0  |      |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * |      |      |      |      |      |      |      |      |      |      |      |      |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * |      |      |      |      |      |      |      |      |      |      |      |      |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * |      |      |      |      |      |             |      |      | MUTE |AUDIO-|AUDIO+|
 * `-----------------------------------------------------------------------------------'
 */

[_RAISE] = LAYOUT_planck_mit(
    _______,  KC_1,      KC_2,      KC_3,      KC_4,     KC_5,       KC_6,      KC_7,      KC_8,      KC_9,            KC_0,              _______,
    _______,  _______,   _______,   _______,   _______,   _______,   _______,   _______,   _______,   _______,         _______,           _______,
    _______,  _______,   _______,   _______,   _______,   _______,   _______,   _______,   _______,   _______,         _______,           _______,
    _______,  _______,   _______,   _______,   _______,       _______       ,   _______,   _______,   KC_AUDIO_MUTE,   KC_AUDIO_VOL_DOWN, KC_AUDIO_VOL_UP
),

/* _ADJUST (Lower + Raise)
 *                      v------------------------RGB CONTROL--------------------v
 * ,-----------------------------------------------------------------------------------.
 * |      | Reset|Debug | RGB  |RGBMOD| HUE+ | HUE- | SAT+ | SAT- |BRGTH+|BRGTH-|      |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * |      |      |      |      |      |      |      |      |      |      |      |      |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * |      |      |      |      |      |      |      |      |      |      |      |      |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * | SNEK |XSNEK |      |      |      |             |      |      |      |      |      |
 * `-----------------------------------------------------------------------------------'
 */

[_ADJUST] = LAYOUT_planck_mit(
    _______,   RESET,    DEBUG,   RGB_TOG, RGB_MOD, RGB_HUI, RGB_HUD, RGB_SAI,  RGB_SAD,  RGB_VAI, RGB_VAD, _______,
    _______,   _______,  _______, _______, _______, _______, _______, _______,  _______,  _______, _______, _______,
    _______,   _______,  _______, _______, _______, _______, _______, _______,  _______,  _______, _______, _______,
    TO(_SNEK), X(SNEK),  _______, _______, _______,     _______     , _______,  _______,  _______, _______, _______
)

};

const macro_t *action_get_macro(keyrecord_t *record, uint8_t id, uint8_t opt);
void matrix_init_user(void);
void matrix_scan_user(void);
layer_state_t layer_state_set_user(layer_state_t state);